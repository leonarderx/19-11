#include <iostream>
using namespace std;
/*int sing(double x) {
	if (x < 0) return -1;
	if (x == 0) return 0;
	if (x > 0) return 1;
}
int main() {
	//Proc16.Описать функцию Sign(X) целого типа, возвращающую для вещественного числа X следующие значения :
	//−1, если X < 0;
	//0, еслиX = 0;
	//1, еслиX > 0.
		//C помощью этой функции найти значение выражения sign(A) + sign(B) для данных вещественных чисел А и В
	double a, b;
	cin >> a >> b;
	cout << sing(a) + sing(b) << endl;*/
	
//Proc17.Описать функцию RootsCount(A, B, C) целого типа, определяющую количество корней квадратного уравнения
//A·x2 + B·x + C = 0 (A, B, C — вещественные параметры, A = 0).
//С ее помощью найти количество корней для каждого из трех квадратных уравнений с данными коэффициентами.
//Количество корней определять по значению дискриминанта : D = B2 −4·A·C.
/*int RootsCount(double a, double b, double c) {
	double d = b * b - 4 * a * c < 0;
	if (d > 0) return 2;
	if (d == 0) return 1;
	if (d < 0) return 0;
}
	int main () {
	double a, b, c;
	cin >> a >> b >> c;
	cout << RootsCount (a, b, c) << endl;
	return 0;
	}*/

//Proc18.Описать функцию CircleS(R) вещественного типа, находящую площадь круга радиуса R(R — вещественное).
//С помощью этой функции найти площади трех кругов с данными радиусами.Площадь круга радиуса R вычисляется по формуле S = π·R2.
//В качестве значения π использовать 3.14.
/*int CircleS(double r) {
	double s = 3.14 * r * r;
	return s;
}
int main() {
	double r;
	for (int i = 1; i <= 3; i++);
	cin >> r;
	cout << CircleS(r) << endl;
	return 0;
}*/

	//Proc19.Описать функцию RingS(R1, R2) вещественного типа, находящую площадь кольца, заключенного между двумя окружностями
	//с общим центром и радиусами R1 и R2(R1 и R2 — вещественные, R1 > R2).С ее помощью найти площади трех колец, для которых 
	//даны внешние и внутренние радиусы.Воспользоваться формулой площади круга радиуса R : S = π·R2.В качестве значения π использовать
    //3.14
int RingS(double R, double R1, double R2) {
	double R1 = 3.14 * R * R;
	double R2 = 3.14 * R * R;
	return R1 > R2;
}
int main() {
	double R1,R2;
	for (int i = 1; i <= 3; i++);
	cin >> R1 >> R2;
	cout << RingS << endl;
	return 0;
}
